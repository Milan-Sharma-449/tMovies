{"version":3,"sources":["assets/tmovie.png","components/header/Header.jsx","assets/footer-bg.jpg","assets/docs/TERMS OF SERVICE.docx","components/footer/Footer.jsx","components/button/Button.jsx","components/modal/Modal.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","pages/detail/VideoList.jsx","pages/detail/Detail.jsx","config/Routes.jsx","App.js","index.js"],"names":["headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","active","findIndex","e","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","ref","className","src","logo","alt","to","map","i","Footer","style","backgroundImage","bg","href","TC","download","Button","props","onClick","children","OutlineButton","ModalContent","contentRef","parentNode","onClose","Modal","useState","setActive","id","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","search","detail","credits","similar","HeroSlideItem","hisrory","useHistory","item","background","backdrop_path","poster_path","setModalActive","a","modal","querySelector","videos","results","length","videSrc","key","setAttribute","innerHTML","toggle","title","overview","push","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","getMovies","page","slice","console","log","modules","grabCursor","spaceBetween","slidesPerView","isActive","MovieCard","link","name","MovieList","items","setItems","getList","Home","PageHeader","Input","placeholder","value","onChange","MovieSearch","history","keyword","setKeyword","goToSearch","useCallback","trim","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","loadMore","Catalog","CastList","casts","setCasts","getCredits","res","cast","profile_path","Video","offsetWidth","VideoList","setVideos","Detail","setItem","getDetail","scrollTo","genres","genre","Routes","component","exact","App","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f1fe597.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.67797e94.png\";","import React, { useRef, useEffect } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './header.scss';\n\nimport logo from '../../assets/tmovie.png';\n\nconst headerNav = [\n    {\n        display: 'Home',\n        path: '/'\n    },\n    {\n        display: 'Movies',\n        path: '/movie'\n    },\n    {\n        display: 'TV Series',\n        path: '/tv'\n    }\n];\n\nconst Header = () => {\n\n    const { pathname } = useLocation();\n    const headerRef = useRef(null);\n\n    const active = headerNav.findIndex(e => e.path === pathname);\n\n    useEffect(() => {\n        const shrinkHeader = () => {\n            if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\n                headerRef.current.classList.add('shrink');\n            } else {\n                headerRef.current.classList.remove('shrink');\n            }\n        }\n        window.addEventListener('scroll', shrinkHeader);\n        return () => {\n            window.removeEventListener('scroll', shrinkHeader);\n        };\n    }, []);\n\n    return (\n        <div ref={headerRef} className=\"header\">\n            <div className=\"header__wrap container\">\n                <div className=\"logo\">\n                    <img src={logo} alt=\"\" />\n                    <Link to=\"/\">tMovies</Link>\n                </div>\n                <ul className=\"header__nav\">\n                    {\n                        headerNav.map((e, i) => (\n                            <li key={i} className={`${i === active ? 'active' : ''}`}>\n                                <Link to={e.path}>\n                                    {e.display}\n                                </Link>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","export default __webpack_public_path__ + \"static/media/TERMS OF SERVICE.a619be15.docx\";","import React from 'react';\n\nimport './footer.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport bg from '../../assets/footer-bg.jpg';\nimport logo from '../../assets/tmovie.png';\nimport TC from '../../assets/docs/TERMS OF SERVICE.docx'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\" style={{backgroundImage: `url(${bg})`}}>\n            <div className=\"footer__content container\">\n                <div className=\"footer__content__logo\">\n                    <div className=\"logo\">\n                        <img src={logo} alt=\"\" />\n                        <Link to=\"/\">tMovies</Link>\n                    </div>\n                </div>\n                <div className=\"footer__content__menus\">\n                    <div className=\"footer__content__menu\">\n                        <Link to=\"/\">Home</Link>\n                        <a href='https://milan-sharma-449.github.io/Portfolio-react/'> Visit Our Site</a>\n                        <a href='https://milan-sharma-449.github.io/Portfolio-react/'> Contact Us</a>\n                        <a href={TC} download  >Terms Of Service</a>\n                        <a href='https://milan-sharma-449.github.io/Portfolio-react/'> About Us</a>\n                    </div>\n                    <div className=\"footer__content__menu\">\n                        <a href='https://github.com/Milan-Sharma-449'>GitHub</a>\n                        <a href='https://www.instagram.com/milansharma_449/'>Instagram</a>\n                        <a href='https://twitter.com/milansharma449'>Twitter</a>\n                        <a href='https://www.linkedin.com/in/milan-sharma-3b9985166/'>LinkedIn</a>\n                        <a href='https://stackoverflow.com/users/20611664/milan-sharma'>StackOverflow</a>\n                    </div>\n                    <div className=\"footer__content__menu\">\n                        <Link to=\"/\">You must watch</Link>\n                        <Link to=\"/\">Recent release</Link>\n                        <Link to=\"/\">Top Trending</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.scss';\n\nconst Button = props => {\n    return (\n        <button\n            className={`btn ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport const OutlineButton = props => {\n    return (\n        <Button\n            className={`btn-outline ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </Button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func\n}\n\nexport default Button;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './modal.scss';\n\nconst Modal = props => {\n\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        setActive(props.active);\n    }, [props.active]);\n\n    return (\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\n            {props.children}\n        </div>\n    );\n}\n\nModal.propTypes = {\n    active: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport const ModalContent = props => {\n\n    const contentRef = useRef(null);\n\n    const closeModal = () => {\n        contentRef.current.parentNode.classList.remove('active');\n        if (props.onClose) props.onClose();\n    }\n\n    return (\n        <div ref={contentRef} className=\"modal__content\">\n            {props.children}\n            <div className=\"modal__content__close\" onClick={closeModal}>\n                <i className=\"bx bx-x\"></i>\n            </div>\n        </div>\n    )\n}\n\nModalContent.propTypes = {\n    onClose: PropTypes.func\n}\n\nexport default Modal;\n","const apiConfig = {\n    baseUrl: 'https://api.themoviedb.org/3/',\n    apiKey: '7b357112471f14d9c6a8cadb83ce2d15',\n    originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\n    w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`\n}\n\nexport default apiConfig;","import axios from 'axios';\nimport queryString from 'query-string';\n\nimport apiConfig from './apiConfig';\n\nconst axiosClient = axios.create({\n    baseURL: apiConfig.baseUrl,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\n});\n\naxiosClient.interceptors.request.use(async (config) => config);\n\naxiosClient.interceptors.response.use((response) => {\n    if (response && response.data) {\n        return response.data;\n    }\n\n    return response;\n}, (error) => {\n    throw error;\n});\n\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\n\nexport const category = {\n    movie: 'movie',\n    tv: 'tv'\n}\n\nexport const movieType = {\n    upcoming: 'upcoming',\n    popular: 'popular',\n    top_rated: 'top_rated'\n}\n\nexport const tvType = {\n    popular: 'popular',\n    top_rated: 'top_rated',\n    on_the_air: 'on_the_air'\n}\n\nconst tmdbApi = {\n    getMoviesList: (type, params) => {\n        const url = 'movie/' + movieType[type];\n        return axiosClient.get(url, params);\n    },\n    getTvList: (type, params) => {\n        const url = 'tv/' + tvType[type];\n        return axiosClient.get(url, params);\n    },\n    getVideos: (cate, id) => {\n        const url = category[cate] + '/' + id + '/videos';\n        return axiosClient.get(url, {params: {}});\n    },\n    search: (cate, params) => {\n        const url = 'search/' + category[cate];\n        return axiosClient.get(url, params);\n    },\n    detail: (cate, id, params) => {\n        const url = category[cate] + '/' + id;\n        return axiosClient.get(url, params);\n    },\n    credits: (cate, id) => {\n        const url = category[cate] + '/' + id + '/credits';\n        return axiosClient.get(url, {params: {}});\n    },\n    similar: (cate, id) => {\n        const url = category[cate] + '/' + id + '/similar';\n        return axiosClient.get(url, {params: {}});\n    },\n}\n\nexport default tmdbApi;","import React, { useState, useEffect, useRef } from 'react';\n\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport Button, { OutlineButton } from '../button/Button';\nimport Modal, { ModalContent } from '../modal/Modal';\n\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './hero-slide.scss';\nimport { useHistory } from 'react-router';\n\nconst HeroSlide = () => {\n\n    SwiperCore.use([Autoplay]);\n\n    const [movieItems, setMovieItems] = useState([]);\n\n    useEffect(() => {\n        const getMovies = async () => {\n            const params = {page: 1}\n            try {\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\n                setMovieItems(response.results.slice(1, 4));\n                console.log(response);\n            } catch {\n                console.log('error');\n            }\n        }\n        getMovies();\n    }, []);\n\n    return (\n        <div className=\"hero-slide\">\n            <Swiper\n                modules={[Autoplay]}\n                grabCursor={true}\n                spaceBetween={0}\n                slidesPerView={1}\n                // autoplay={{delay: 3000}}\n            >\n                {\n                    movieItems.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            {({ isActive }) => (\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\n                            )}\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n            {\n                movieItems.map((item, i) => <TrailerModal key={i} item={item}/>)\n            }\n        </div>\n    );\n}\n\nconst HeroSlideItem = props => {\n\n    let hisrory = useHistory();\n\n    const item = props.item;\n\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n    const setModalActive = async () => {\n        const modal = document.querySelector(`#modal_${item.id}`);\n\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n        if (videos.results.length > 0) {\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\n        } else {\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\n        }\n\n        modal.classList.toggle('active');\n    }\n\n    return (\n        <div\n            className={`hero-slide__item ${props.className}`}\n            style={{backgroundImage: `url(${background})`}}\n        >\n            <div className=\"hero-slide__item__content container\">\n                <div className=\"hero-slide__item__content__info\">\n                    <h2 className=\"title\">{item.title}</h2>\n                    <div className=\"overview\">{item.overview}</div>\n                    <div className=\"btns\">\n                        <Button onClick={() => hisrory.push('/movie/' + item.id)}>\n                            Watch now\n                        </Button>\n                        <OutlineButton onClick={setModalActive}>\n                            Watch trailer\n                        </OutlineButton>\n                    </div>\n                </div>\n                <div className=\"hero-slide__item__content__poster\">\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst TrailerModal = props => {\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    const onClose = () => iframeRef.current.setAttribute('src', '');\n\n    return (\n        <Modal active={false} id={`modal_${item.id}`}>\n            <ModalContent onClose={onClose}>\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default HeroSlide;\n","import React from 'react';\n\nimport './movie-card.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nconst MovieCard = props => {\n\n    const item  = props.item;\n\n    const link = '/' + category[props.category] + '/' + item.id;\n\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path);\n\n    return (\n        <Link to={link}>\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}}>\n                <Button>\n                    <i className=\"bx bx-play\"></i>\n                </Button>\n            </div>\n            <h3>{item.title || item.name}</h3>\n        </Link>\n    );\n}\n\nexport default MovieCard;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport MovieCard from '../movie-card/MovieCard';\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, {params});\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            <MovieCard item={item} category={props.category}/>\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { OutlineButton } from '../components/button/Button';\nimport HeroSlide from '../components/hero-slide/HeroSlide';\nimport MovieList from '../components/movie-list/MovieList';\n\nimport { category, movieType, tvType } from '../api/tmdbApi';\n\nconst Home = () => {\n    return (\n        <>\n            <HeroSlide/>\n            <div className=\"container\">\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Trending Movies</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.movie} type={movieType.popular}/>\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Top Rated Movies</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.movie} type={movieType.top_rated}/>\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Trending TV</h2>\n                        <Link to=\"/tv\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.tv} type={tvType.popular}/>\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Top Rated TV</h2>\n                        <Link to=\"/tv\">\n                            <OutlineButton className=\"small\">View more</OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList category={category.tv} type={tvType.top_rated}/>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport './page-header.scss';\n\nimport bg from '../../assets/footer-bg.jpg';\n\nconst PageHeader = props => {\n    return (\n        <div className=\"page-header\" style={{backgroundImage: `url(${bg})`}}>\n            <h2>{props.children}</h2>\n        </div>\n    );\n}\n\n\nexport default PageHeader;\n","import React from 'react';\n\nimport './input.scss';\n\nconst Input = props => {\n    return (\n        <input\n            type={props.type}\n            placeholder={props.placeholder}\n            value={props.value}\n            onChange={props.onChange ? (e) => props.onChange(e) : null}\n        />\n    );\n}\n\nexport default Input;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\n\nimport './movie-grid.scss';\n\nimport MovieCard from '../movie-card/MovieCard';\nimport Button, { OutlineButton } from '../button/Button';\nimport Input from '../input/Input'\n\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\n\nconst MovieGrid = props => {\n\n    const [items, setItems] = useState([]);\n\n    const [page, setPage] = useState(1);\n    const [totalPage, setTotalPage] = useState(0);\n\n    const { keyword } = useParams();\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            if (keyword === undefined) {\n                const params = {};\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\n                }\n            } else {\n                const params = {\n                    query: keyword\n                }\n                response = await tmdbApi.search(props.category, {params});\n            }\n            setItems(response.results);\n            setTotalPage(response.total_pages);\n        }\n        getList();\n    }, [props.category, keyword]);\n\n    const loadMore = async () => {\n        let response = null;\n        if (keyword === undefined) {\n            const params = {\n                page: page + 1\n            };\n            switch(props.category) {\n                case category.movie:\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                    break;\n                default:\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\n            }\n        } else {\n            const params = {\n                page: page + 1,\n                query: keyword\n            }\n            response = await tmdbApi.search(props.category, {params});\n        }\n        setItems([...items, ...response.results]);\n        setPage(page + 1);\n    }\n\n    return (\n        <>\n            <div className=\"section mb-3\">\n                <MovieSearch category={props.category} keyword={keyword}/>\n            </div>\n            <div className=\"movie-grid\">\n                {\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\n                }\n            </div>\n            {\n                page < totalPage ? (\n                    <div className=\"movie-grid__loadmore\">\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\n                    </div>\n                ) : null\n            }\n        </>\n    );\n}\n\nconst MovieSearch = props => {\n\n    const history = useHistory();\n\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\n\n    const goToSearch = useCallback(\n        () => {\n            if (keyword.trim().length > 0) {\n                history.push(`/${category[props.category]}/search/${keyword}`);\n            }\n        },\n        [keyword, props.category, history]\n    );\n\n    useEffect(() => {\n        const enterEvent = (e) => {\n            e.preventDefault();\n            if (e.keyCode === 13) {\n                goToSearch();\n            }\n        }\n        document.addEventListener('keyup', enterEvent);\n        return () => {\n            document.removeEventListener('keyup', enterEvent);\n        };\n    }, [keyword, goToSearch]);\n\n    return (\n        <div className=\"movie-search\">\n            <Input\n                type=\"text\"\n                placeholder=\"Enter keyword\"\n                value={keyword}\n                onChange={(e) => setKeyword(e.target.value)}\n            />\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\n        </div>\n    )\n}\n\nexport default MovieGrid;\n","import React from 'react';\n\nimport { useParams } from 'react-router';\n\nimport PageHeader from '../components/page-header/PageHeader';\n\nimport { category as cate } from '../api/tmdbApi';\nimport MovieGrid from '../components/movie-grid/MovieGrid';\n\nconst Catalog = () => {\n\n    const { category } = useParams();\n\n    return (\n        <>\n            <PageHeader>\n                {category === cate.movie ? 'Movies' : 'TV Series'}\n            </PageHeader>\n            <div className=\"container\">\n                <div className=\"section mb-3\">\n                    <MovieGrid category={category}/>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Catalog;\n","import React, { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nconst CastList = props => {\n\n    const {category} = useParams();\n\n    const [casts, setCasts] = useState([]);\n\n    useEffect(() => {\n        const getCredits = async () => {\n            const res = await tmdbApi.credits(category, props.id);\n            setCasts(res.cast.slice(0, 5));\n        }\n        getCredits();\n    }, [category, props.id]);\n    return (\n        <div className=\"casts\">\n            {\n                casts.map((item, i) => (\n                    <div key={i} className=\"casts__item\">\n                        <div className=\"casts__item__img\" style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\n                        <p className=\"casts__item__name\">{item.name}</p>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default CastList;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\n\nconst VideoList = props => {\n\n    const {category} = useParams();\n\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            const res = await tmdbApi.getVideos(category, props.id);\n            setVideos(res.results.slice(0, 5));\n        }\n        getVideos();\n    }, [category, props.id]);\n\n    return (\n        <>\n            {\n                videos.map((item, i) => (\n                    <Video key={i} item={item}/>\n                ))\n            }\n        </>\n    );\n}\n\nconst Video = props => {\n\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    useEffect(() => {\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n        iframeRef.current.setAttribute('height', height);\n    }, []);\n\n    return (\n        <div className=\"video\">\n            <div className=\"video__title\">\n                <h2>{item.name}</h2>\n            </div>\n            <iframe\n                src={`https://www.youtube.com/embed/${item.key}`}\n                ref={iframeRef}\n                width=\"100%\"\n                title=\"video\"\n            ></iframe>\n        </div>\n    )\n}\n\nexport default VideoList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './detail.scss';\nimport CastList from './CastList';\nimport VideoList from './VideoList';\n\nimport MovieList from '../../components/movie-list/MovieList';\n\nconst Detail = () => {\n\n    const { category, id } = useParams();\n\n    const [item, setItem] = useState(null);\n\n    useEffect(() => {\n        const getDetail = async () => {\n            const response = await tmdbApi.detail(category, id, {params:{}});\n            setItem(response);\n            window.scrollTo(0,0);\n        }\n        getDetail();\n    }, [category, id]);\n\n    return (\n        <>\n            {\n                item && (\n                    <>\n                        <div className=\"banner\" style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\n                        <div className=\"mb-3 movie-content container\">\n                            <div className=\"movie-content__poster\">\n                                <div className=\"movie-content__poster__img\" style={{backgroundImage: `url(${apiConfig.originalImage(item.poster_path || item.backdrop_path)})`}}></div>\n                            </div>\n                            <div className=\"movie-content__info\">\n                                <h1 className=\"title\">\n                                    {item.title || item.name}\n                                </h1>\n                                <div className=\"genres\">\n                                    {\n                                        item.genres && item.genres.slice(0, 5).map((genre, i) => (\n                                            <span key={i} className=\"genres__item\">{genre.name}</span>\n                                        ))\n                                    }\n                                </div>\n                                <p className=\"overview\">{item.overview}</p>\n                                <div className=\"cast\">\n                                    <div className=\"section__header\">\n                                        <h2>Casts</h2>\n                                    </div>\n                                    <CastList id={item.id}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"section mb-3\">\n                                <VideoList id={item.id}/>\n                            </div>\n                            <div className=\"section mb-3\">\n                                <div className=\"section__header mb-2\">\n                                    <h2>Similar</h2>\n                                </div>\n                                <MovieList category={category} type=\"similar\" id={item.id}/>\n                            </div>\n                        </div>\n                    </>\n                )\n            }\n        </>\n    );\n}\n\nexport default Detail;\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport Catalog from '../pages/Catalog';\nimport Detail from '../pages/detail/Detail';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route\n                path='/:category/search/:keyword'\n                component={Catalog}\n            />\n            <Route\n                path='/:category/:id'\n                component={Detail}\n            />\n            <Route\n                path='/:category'\n                component={Catalog}\n            />\n            <Route\n                path='/'\n                exact\n                component={Home}\n            />\n        </Switch>\n    );\n}\n\nexport default Routes;\n","import 'swiper/swiper.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\nimport './App.scss';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\n\nimport Routes from './config/Routes';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Route render={props => (\n                <>\n                    <Header {...props}/>\n                    <Routes/>\n                    <Footer/>\n                </>\n            )}/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}